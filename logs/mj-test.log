INFO  19:23:41,273 - Compiling source file: C:\Users\vasil\Desktop\micro-java-compiler\test\program2.mj
INFO  19:23:41,422 - #2 program
INFO  19:23:41,422 - #50 p
INFO  19:23:41,422 - #4 class
INFO  19:23:41,422 - #50 Base
INFO  19:23:41,422 - #48 {
INFO  19:23:41,432 - #48 {
INFO  19:23:41,432 - #15 void
INFO  19:23:41,432 - #50 m1
INFO  19:23:41,432 - #44 (
INFO  19:23:41,432 - #45 )
INFO  19:23:41,432 - #48 {
INFO  19:23:41,432 - #49 }
INFO  19:23:41,441 - #49 }
INFO  19:23:41,442 - #49 }
INFO  19:23:41,442 - #4 class
INFO  19:23:41,442 - #50 Derived
INFO  19:23:41,442 - #16 extends
INFO  19:23:41,442 - #50 Base
INFO  19:23:41,442 - #48 {
INFO  19:23:41,442 - #48 {
INFO  19:23:41,442 - #15 void
INFO  19:23:41,473 - #50 m1
INFO  19:23:41,473 - #44 (
INFO  19:23:41,473 - #45 )
INFO  19:23:41,473 - #48 {
INFO  19:23:41,473 - #49 }
INFO  19:23:41,473 - #49 }
INFO  19:23:41,473 - #49 }
INFO  19:23:41,473 - #48 {
INFO  19:23:41,473 - #15 void
INFO  19:23:41,473 - #50 f
INFO  19:23:41,473 - #44 (
INFO  19:23:41,473 - #45 )
INFO  19:23:41,473 - #48 {
INFO  19:23:41,473 - #49 }
INFO  19:23:41,473 - #15 void
INFO  19:23:41,473 - #50 main
INFO  19:23:41,473 - #44 (
INFO  19:23:41,473 - #45 )
INFO  19:23:41,473 - #48 {
INFO  19:23:41,473 - #49 }
INFO  19:23:41,473 - #15 void
INFO  19:23:41,473 - #50 f2
INFO  19:23:41,473 - #44 (
INFO  19:23:41,473 - #50 int
INFO  19:23:41,473 - #50 x
INFO  19:23:41,473 - #41 ,
INFO  19:23:41,483 - #50 Base
INFO  19:23:41,487 - #50 b
INFO  19:23:41,487 - #45 )
INFO  19:23:41,487 - #48 {
INFO  19:23:41,487 - #49 }
INFO  19:23:41,487 - #15 void
INFO  19:23:41,487 - #50 formParamCallTest
INFO  19:23:41,487 - #44 (
INFO  19:23:41,487 - #45 )
INFO  19:23:41,487 - #50 Base
INFO  19:23:41,487 - #50 b
INFO  19:23:41,487 - #39 ;
INFO  19:23:41,492 - #50 Derived
INFO  19:23:41,492 - #50 d
INFO  19:23:41,492 - #39 ;
INFO  19:23:41,492 - #48 {
INFO  19:23:41,492 - #50 b
INFO  19:23:41,492 - #38 =
INFO  19:23:41,492 - #50 d
INFO  19:23:41,492 - #39 ;
INFO  19:23:41,503 - #50 f2
INFO  19:23:41,503 - #44 (
INFO  19:23:41,503 - #51 5
INFO  19:23:41,503 - #41 ,
INFO  19:23:41,503 - #50 d
INFO  19:23:41,503 - #45 )
INFO  19:23:41,503 - #39 ;
INFO  19:23:41,503 - #50 f
INFO  19:23:41,503 - #44 (
INFO  19:23:41,503 - #45 )
INFO  19:23:41,503 - #39 ;
INFO  19:23:41,503 - #50 b
INFO  19:23:41,503 - #43 .
INFO  19:23:41,503 - #50 m1
INFO  19:23:41,503 - #44 (
INFO  19:23:41,503 - #45 )
INFO  19:23:41,503 - #39 ;
INFO  19:23:41,503 - #50 f
INFO  19:23:41,503 - #44 (
INFO  19:23:41,503 - #51 5
INFO  19:23:41,503 - #45 )
INFO  19:23:41,503 - #39 ;
INFO  19:23:41,503 - #50 f2
INFO  19:23:41,503 - #44 (
INFO  19:23:41,503 - #45 )
INFO  19:23:41,503 - #39 ;
INFO  19:23:41,503 - #50 f2
INFO  19:23:41,503 - #44 (
INFO  19:23:41,503 - #53 x
INFO  19:23:41,503 - #41 ,
INFO  19:23:41,503 - #51 5
INFO  19:23:41,503 - #45 )
INFO  19:23:41,503 - #39 ;
INFO  19:23:41,503 - #50 f2
INFO  19:23:41,503 - #44 (
INFO  19:23:41,503 - #51 5
INFO  19:23:41,503 - #41 ,
INFO  19:23:41,503 - #50 b
INFO  19:23:41,503 - #45 )
INFO  19:23:41,511 - #39 ;
INFO  19:23:41,511 - #49 }
INFO  19:23:41,511 - #15 void
INFO  19:23:41,511 - #50 assignTest
INFO  19:23:41,511 - #44 (
INFO  19:23:41,511 - #45 )
INFO  19:23:41,511 - #50 Base
INFO  19:23:41,511 - #50 base
INFO  19:23:41,511 - #39 ;
INFO  19:23:41,511 - #50 Derived
INFO  19:23:41,511 - #50 derived
INFO  19:23:41,511 - #39 ;
INFO  19:23:41,511 - #48 {
INFO  19:23:41,511 - #50 base
INFO  19:23:41,511 - #38 =
INFO  19:23:41,512 - #50 derived
INFO  19:23:41,512 - #39 ;
INFO  19:23:41,512 - #50 derived
INFO  19:23:41,512 - #38 =
INFO  19:23:41,512 - #50 base
INFO  19:23:41,512 - #39 ;
INFO  19:23:41,512 - #49 }
INFO  19:23:41,512 - #15 void
INFO  19:23:41,512 - #50 breakContinueTEst
INFO  19:23:41,512 - #44 (
INFO  19:23:41,512 - #45 )
INFO  19:23:41,512 - #48 {
INFO  19:23:41,512 - #9 do
INFO  19:23:41,512 - #48 {
INFO  19:23:41,512 - #3 break
INFO  19:23:41,512 - #39 ;
INFO  19:23:41,512 - #17 continue
INFO  19:23:41,512 - #39 ;
INFO  19:23:41,512 - #49 }
INFO  19:23:41,512 - #10 while
INFO  19:23:41,512 - #44 (
INFO  19:23:41,512 - #52 true
INFO  19:23:41,512 - #45 )
INFO  19:23:41,522 - #39 ;
INFO  19:23:41,522 - #3 break
INFO  19:23:41,522 - #39 ;
INFO  19:23:41,522 - #17 continue
INFO  19:23:41,522 - #39 ;
INFO  19:23:41,522 - #49 }
INFO  19:23:41,522 - #15 void
INFO  19:23:41,522 - #50 printReadTest
INFO  19:23:41,522 - #44 (
INFO  19:23:41,522 - #45 )
INFO  19:23:41,522 - #50 Base
INFO  19:23:41,522 - #50 b
INFO  19:23:41,522 - #39 ;
INFO  19:23:41,522 - #50 int
INFO  19:23:41,522 - #50 i
INFO  19:23:41,522 - #39 ;
INFO  19:23:41,522 - #50 char
INFO  19:23:41,522 - #50 c
INFO  19:23:41,522 - #39 ;
INFO  19:23:41,522 - #50 bool
INFO  19:23:41,522 - #50 bo
INFO  19:23:41,522 - #39 ;
INFO  19:23:41,522 - #48 {
INFO  19:23:41,522 - #13 read
INFO  19:23:41,522 - #44 (
INFO  19:23:41,522 - #50 b
INFO  19:23:41,522 - #45 )
INFO  19:23:41,522 - #39 ;
INFO  19:23:41,522 - #13 read
INFO  19:23:41,522 - #44 (
INFO  19:23:41,522 - #50 i
INFO  19:23:41,522 - #45 )
INFO  19:23:41,522 - #39 ;
INFO  19:23:41,522 - #13 read
INFO  19:23:41,522 - #44 (
INFO  19:23:41,522 - #50 c
INFO  19:23:41,522 - #45 )
INFO  19:23:41,522 - #39 ;
INFO  19:23:41,522 - #13 read
INFO  19:23:41,522 - #44 (
INFO  19:23:41,522 - #50 bo
INFO  19:23:41,522 - #45 )
INFO  19:23:41,522 - #39 ;
INFO  19:23:41,522 - #12 print
INFO  19:23:41,522 - #44 (
INFO  19:23:41,522 - #50 b
INFO  19:23:41,522 - #45 )
INFO  19:23:41,522 - #39 ;
INFO  19:23:41,522 - #12 print
INFO  19:23:41,522 - #44 (
INFO  19:23:41,522 - #50 i
INFO  19:23:41,522 - #45 )
INFO  19:23:41,522 - #39 ;
INFO  19:23:41,531 - #12 print
INFO  19:23:41,531 - #44 (
INFO  19:23:41,531 - #50 c
INFO  19:23:41,531 - #45 )
INFO  19:23:41,531 - #39 ;
INFO  19:23:41,531 - #12 print
INFO  19:23:41,531 - #44 (
INFO  19:23:41,532 - #50 bo
INFO  19:23:41,533 - #45 )
INFO  19:23:41,533 - #39 ;
INFO  19:23:41,533 - #12 print
INFO  19:23:41,533 - #44 (
INFO  19:23:41,533 - #51 5
INFO  19:23:41,533 - #45 )
INFO  19:23:41,533 - #39 ;
INFO  19:23:41,533 - #49 }
INFO  19:23:41,533 - #15 void
INFO  19:23:41,533 - #50 returnStatementTest1
INFO  19:23:41,533 - #44 (
INFO  19:23:41,533 - #45 )
INFO  19:23:41,533 - #48 {
INFO  19:23:41,533 - #14 return
INFO  19:23:41,533 - #51 5
INFO  19:23:41,533 - #39 ;
INFO  19:23:41,533 - #14 return
INFO  19:23:41,533 - #39 ;
INFO  19:23:41,533 - #49 }
INFO  19:23:41,533 - #50 int
INFO  19:23:41,533 - #50 returnStatementTest2
INFO  19:23:41,533 - #44 (
INFO  19:23:41,533 - #45 )
INFO  19:23:41,533 - #48 {
INFO  19:23:41,533 - #14 return
INFO  19:23:41,533 - #39 ;
INFO  19:23:41,533 - #14 return
INFO  19:23:41,533 - #51 5
INFO  19:23:41,533 - #39 ;
INFO  19:23:41,533 - #49 }
INFO  19:23:41,533 - #50 Base
INFO  19:23:41,533 - #50 returnStatementTest3
INFO  19:23:41,533 - #44 (
INFO  19:23:41,533 - #45 )
INFO  19:23:41,533 - #50 Derived
INFO  19:23:41,533 - #50 d
INFO  19:23:41,533 - #39 ;
INFO  19:23:41,533 - #48 {
INFO  19:23:41,533 - #14 return
INFO  19:23:41,533 - #39 ;
INFO  19:23:41,533 - #14 return
INFO  19:23:41,533 - #51 5
INFO  19:23:41,533 - #39 ;
INFO  19:23:41,533 - #14 return
INFO  19:23:41,533 - #50 d
INFO  19:23:41,533 - #39 ;
INFO  19:23:41,533 - #49 }
INFO  19:23:41,533 - #49 }
INFO  19:23:41,652 -  Formal parameter declared (x). line 28
INFO  19:23:41,652 -  Formal parameter declared (b). line 28
INFO  19:23:41,652 - Local variable declared (b). line 32
INFO  19:23:41,652 - Local variable declared (d). line 32
INFO  19:23:41,663 - Global function call - f2() line 34
INFO  19:23:41,663 - Global function call - f() line 35
INFO  19:23:41,663 - Member reference: b DOT m1 line 36
ERROR 19:23:41,663 - Invalid method call - Method f() called with invalid number of arguments. line 37
ERROR 19:23:41,663 - Invalid method call - Method f2() called with invalid number of arguments. line 38
ERROR 19:23:41,663 - Invalid method call - Method f2() called with invalid arguments. line 39
INFO  19:23:41,663 - Global function call - f2() line 40
INFO  19:23:41,663 - Local variable declared (base). line 43
INFO  19:23:41,663 - Local variable declared (derived). line 43
ERROR 19:23:41,663 - Incompatible assignment operation types. line 45
ERROR 19:23:41,663 - Break statement must be inside do-while loop.
ERROR 19:23:41,663 - Continue statement must be inside do-while loop.
INFO  19:23:41,663 - Local variable declared (b). line 56
INFO  19:23:41,663 - Local variable declared (i). line 56
INFO  19:23:41,663 - Local variable declared (c). line 56
INFO  19:23:41,663 - Local variable declared (bo). line 56
ERROR 19:23:41,663 - Invalid read statement - Identifier (b) must be either int, char or bool type. line 57
ERROR 19:23:41,663 - Invalid print statement - expression inside the statement must be either int, char or bool type. line 61
ERROR 19:23:41,663 - Invalid return statement - returned type does not match method/function type. line 69
ERROR 19:23:41,663 - Invalid return statement - return statement must return a value. line 8
INFO  19:23:41,663 - Local variable declared (d). line 79
ERROR 19:23:41,663 - Invalid return statement - return statement must return a value. line 8
ERROR 19:23:41,663 - Invalid return statement - returned type does not match method/function type. line 81
